{"ast":null,"code":"var _jsxFileName = \"/home/hp/Downloads/New folder (2)-20240917T045918Z-001/msk_1/msk/P1rC2waW/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xisNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      //if square is arleady filled,return it\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (isNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    ;\n    onPlay(nextSquares); //onPlay function,the Game component can update the Board when the user clicks a square\n  }\n\n  //To know player that game is over,adding status section to board component\n  const winner = calculateWinner(square);\n  let status;\n  if (winner) {\n    status = \"Winner:\" + winner;\n  } else {\n    status = \"Next Player:\" + (xisNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  //adding state to this component to track which player is next and history of moves\n  //Before you can implement jumpTo, you need the Game component to keep track of which step the user is currently viewing. To do this, define a new state variable called currentMove, defaulting to 0\n  const [isNext] = currentMove % 2 === 0;\n  const [history, setHistory] = useState([array(9).fll(null)]);\n  //Before you can implement jumpTo, you need the Game component to keep track of which step the user is currently viewing. To do this, define a new state variable called currentMove, defaulting to 0\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n\n  //HandlePlay function inside the Game component that will be called by the Board component to update the game\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  //You already have an array of history moves in state, so now you need to transform it to an array of React elements. In JavaScript, to transform one array into another, you can use the array map method\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      desciprtion = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return (\n      /*#__PURE__*/\n      //Itâ€™s strongly recommended that you assign proper keys whenever you build dynamic lists.\n      _jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => jumpTo(move),\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    );\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xisNext: isNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n}\n_s(Game, \"FDT8Wi63yEitNyBpaZtCi/jzwK4=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xisNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","isNext","winner","square","status","_c2","Game","_s","currentMove","history","setHistory","array","fll","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","map","move","description","desciprtion","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/home/hp/Downloads/New folder (2)-20240917T045918Z-001/msk_1/msk/P1rC2waW/src/App.js"],"sourcesContent":["import {useState} from 'react';\n\nfunction Square({value,onSquareClick}) {\n    return (\n        <button className=\"square\" onClick={onSquareClick}>\n            {value}\n        </button>\n    )\n}\n\nfunction Board({xisNext,squares,onPlay}) {\n    function handleClick(i) {\n        if (squares[i] || calculateWinner(squares)) {    //if square is arleady filled,return it\n            return;\n        } \n        const nextSquares=squares.slice()\n         if (isNext) {\n            nextSquares[i]=\"X\"\n         } else {\n            nextSquares[i]=\"O\";\n         };\n         onPlay(nextSquares)   //onPlay function,the Game component can update the Board when the user clicks a square\n    }\n    \n//To know player that game is over,adding status section to board component\nconst winner=calculateWinner(square);\nlet status;\nif (winner) {\n    status=\"Winner:\" + winner\n    } else {\n        status=\"Next Player:\" +(xisNext ? \"X\":\"O\")\n    }\n    return (\n        <>\n        <div className=\"status\">{status}</div>\n              <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n        </>\n    )\n}\n\n\nexport default function Game() {\n    //adding state to this component to track which player is next and history of moves\n    //Before you can implement jumpTo, you need the Game component to keep track of which step the user is currently viewing. To do this, define a new state variable called currentMove, defaulting to 0\n    const [isNext]=currentMove%2===0\n    const [history,setHistory]=useState([array(9).fll(null)]);\n    //Before you can implement jumpTo, you need the Game component to keep track of which step the user is currently viewing. To do this, define a new state variable called currentMove, defaulting to 0\n    const [currentMove, setCurrentMove] = useState(0);\n    const currentSquares=history[currentMove];\n\n//HandlePlay function inside the Game component that will be called by the Board component to update the game\n  function handlePlay(nextSquares) {\n    const nextHistory=[...history.slice(0,currentMove+1),nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length-1)\n}\n\n//You already have an array of history moves in state, so now you need to transform it to an array of React elements. In JavaScript, to transform one array into another, you can use the array map method\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove)\n}\nconst moves= history.map((squares,move) => {\n    let description;\n    if (move>0) {\n        desciprtion=\"Go to move #\" + move\n    } else {\n        description=\"Go to game start\"\n    }\n    return (\n        //Itâ€™s strongly recommended that you assign proper keys whenever you build dynamic lists.\n        <li key={move}> \n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    )\n  })\n  \n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board xisNext={isNext} squares={currentSquares} onPlay={handlePlay} />\n        </div>\n        <div className=\"game-info\">\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n\n \nfunction calculateWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n          ];\n          for (let i=0;i<lines.length;i++) {\n            const [a,b,c]=lines[i]\n            if (squares[a] && squares[a] ===squares[b] && squares[a]===squares[c]) {\n                return squares[a]\n            }\n          }\n          return null;\n    }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}